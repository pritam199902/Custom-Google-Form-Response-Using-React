{"version":3,"sources":["Components/Api.js","Components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["submitData","data","a","formData","FormData","append","name","address","phone","time","about","fetch","method","mode","body","then","res","text","response","catch","e","Home","useState","alert","setAlert","handleAlertOpen","AlertData","setAlertData","handleAlertClose","open","setOpen","Loading","setLoading","Name","setName","Address","setAddress","Phone","setPhone","Time","setTime","About","setAbout","AboutOtherVisable","setAboutOtherVisable","reset","handleSubmit","preventDefault","errors","isError","trim","push","title","message","join","ok","cancel","action","Fragment","Button","variant","onClick","endIcon","AccountCircle","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","className","Dialog","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","src","alt","Close","fontSize","style","color","onSubmit","type","value","onChange","txt","target","placeholder","inputStyle","padding","width","inputClass","enableSearch","country","required","countryCodeEditable","map","dd","i","defaultValue","disabled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.324950e3.chunk.js","sourcesContent":["// google POST API url\r\nconst ApiUrl = 'https://docs.google.com/forms/u/0/d/e/1FAIpQLScWUyeUYn_LuegxlH5SkFfGwXnZ4fW8u2cbFV_Kr4FRS3tTmw/formResponse'\r\n\r\n\r\n// post request handler\r\nconst submitData = async (data) => {\r\n    var formData = new FormData()\r\n\r\n    // provided google form link :: https://docs.google.com/forms/d/e/1FAIpQLScWUyeUYn_LuegxlH5SkFfGwXnZ4fW8u2cbFV_Kr4FRS3tTmw/viewform\r\n    // filling up the req body form according to the provoded Google Form\r\n    formData.append('entry.923575230', data.name)\r\n    formData.append('entry.959771919', data.address)\r\n    formData.append('entry.1470857061', data.phone)\r\n    formData.append('entry.766642417', data.time)\r\n    formData.append('entry.210369612', data.about)\r\n\r\n\r\n    // sending request to API asyncronusly and returing the response\r\n    return await fetch(ApiUrl, {\r\n        method: 'POST',\r\n        mode: \"no-cors\",\r\n        body: formData\r\n    })\r\n        .then(res => res.text())\r\n        .then(response => true)  // success response\r\n        .catch(e => false)  // error response\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default submitData","import React, { useState } from 'react'\r\nimport './style.css'\r\nimport { Button, Backdrop, Box, Modal, Fade, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core'\r\nimport { AccountCircle, Close } from '@material-ui/icons'\r\n\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/bootstrap.css'\r\n\r\nimport submitData from \"../Api\"\r\n\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n\r\n    const [alert, setAlert] = useState(false);\r\n    const handleAlertOpen = () => setAlert(true);\r\n    const [AlertData, setAlertData] = useState()\r\n    const handleAlertClose = () => { setAlertData(); setAlert(false); }\r\n\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => {\r\n        if (Loading) {\r\n            setAlertData({\r\n                title: 'Please Wait!',\r\n                message: \"Please wait while system is processing some important data!\",\r\n                ok: \"ok\",\r\n                cancel: \"cancel\",\r\n                action: handleAlertClose\r\n            })\r\n            handleAlertOpen()\r\n        } else {\r\n            setOpen(false);\r\n\r\n        }\r\n    }\r\n\r\n    const handleCloseClick = () => {\r\n        if (Loading) {\r\n            setAlertData({\r\n                title: 'Please Wait!',\r\n                message: \"Please wait while system is processing some important data!\",\r\n                ok: \"ok\",\r\n                cancel: \"cancel\",\r\n                action: handleAlertClose\r\n            })\r\n            handleAlertOpen()\r\n        } else {\r\n            setAlertData({\r\n                title: 'Data Remove Warning!',\r\n                message: \"Do you want to remove your data?\",\r\n                ok: \"remove\",\r\n                cancel: \"cancel\",\r\n                action: reset\r\n            })\r\n            handleAlertOpen()\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const DemoTimeList = [\r\n        \"1 - 2\", \"3 - 4\", \"5 - 6\", \"7 - 8\"\r\n    ]\r\n\r\n\r\n    const [Loading, setLoading] = useState(false)\r\n\r\n    const [Name, setName] = useState(\"\")\r\n    const [Address, setAddress] = useState(\"\")\r\n    const [Phone, setPhone] = useState(\"\")\r\n    const [Time, setTime] = useState(\"\")\r\n    const [About, setAbout] = useState(\"\")\r\n\r\n    const [AboutOtherVisable, setAboutOtherVisable] = useState(false)\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Input Event Handler \r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    const handleName = (txt) => {\r\n        setName(txt)\r\n    }\r\n\r\n    const handleAddress = (txt) => {\r\n        setAddress(txt)\r\n    }\r\n\r\n    const handlePhone = (txt) => {\r\n        setPhone(txt)\r\n    }\r\n\r\n    const handleTime = (time) => {\r\n        setTime(time)\r\n    }\r\n\r\n    const handleAbout = (txt) => {\r\n\r\n        if (txt === \"_Other_Text\") {\r\n            setAboutOtherVisable(true)\r\n            setAbout(\"\")\r\n        } else {\r\n            setAboutOtherVisable(false)\r\n            setAbout(txt)\r\n        }\r\n    }\r\n\r\n    const handleAboutOtherText = (txt) => {\r\n        if (AboutOtherVisable) {\r\n            setAbout(txt)\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setAddress('')\r\n        setPhone('')\r\n        setTime('')\r\n        setAbout('')\r\n        setAlert(false)\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Form Submit handler\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        var errors = []\r\n        var isError = false\r\n        if (Name.trim() === \"\") {\r\n            isError = true\r\n            errors.push(\"Name\")\r\n        }\r\n\r\n        if (Address.trim() === \"\") {\r\n            isError = true\r\n            errors.push(\"Address\")\r\n        }\r\n\r\n\r\n        if (Phone.trim() === \"\") {\r\n            isError = true\r\n            errors.push(\"Phone Number\")\r\n        }\r\n\r\n        if (Time.trim() === \"\") {\r\n            isError = true\r\n            errors.push(\"Demo Time\")\r\n        }\r\n\r\n\r\n        // If any error during input handling\r\n        if (isError) {\r\n            setAlertData({\r\n                title: \"Input Warning!\",\r\n                message: `${errors.join(\", \")} are not provided! \\nPlease provide all the required field!`,\r\n                ok: \"ok\",\r\n                cancel: \"cancel\",\r\n                action: handleAlertClose\r\n            })\r\n            return handleAlertOpen()\r\n        }\r\n\r\n        const data = {\r\n            name: Name,\r\n            address: Address,\r\n            phone: Phone,\r\n            time: Time,\r\n            about: About\r\n        }\r\n\r\n        setLoading(true)\r\n\r\n        // sending request to Google API\r\n        const res = await submitData(data)\r\n        setLoading(false)\r\n        if (res) {\r\n            \r\n            setAlertData({\r\n                title: \"Successfull!\",\r\n                message: `Hi, ${Name},\\nYour information has been submited successfully as google form custome REST Response.`,\r\n                ok: \"ok\",\r\n                cancel: \"cancel\",\r\n\r\n                action: reset\r\n            })\r\n            handleAlertOpen()\r\n        }else{\r\n            setAlertData({\r\n                title: \"Fail to submit!\",\r\n                message: `Sorry, we are unable to send your response! Try again later!`,\r\n                ok: \"ok\",\r\n                cancel: \"cancel\",\r\n\r\n                action: handleAlertClose\r\n            })\r\n            handleAlertOpen()\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Button variant=\"contained\" onClick={handleOpen} endIcon={<AccountCircle />}>\r\n                Click here\r\n            </Button>\r\n\r\n\r\n\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n\r\n\r\n                    <Box className=\"modal-box\" >\r\n\r\n\r\n                        <Dialog\r\n                            open={alert}\r\n                            onClose={handleAlertClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">\r\n                                {AlertData ? AlertData.title : \"Warning\"}\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-description\">\r\n                                    {AlertData ? AlertData.message : \"Please wait!\"}\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleAlertClose} > {AlertData ? AlertData.cancel : \"cancel\"}</Button>\r\n                                <Button onClick={AlertData ? AlertData.action : handleAlertClose} autoFocus>\r\n                                    {AlertData ? AlertData.ok : \"ok\"}\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n\r\n\r\n                        <div className=\"logo-div\">\r\n                            <img src=\"/logo192.png\" alt=\"logo\" className=\"side-logo\" />\r\n                            <div className=\" logo-title\" >\r\n                                PolyMatic\r\n                            </div>\r\n                            <div className=\"logo-desc\" >\r\n                                Redesign Everything\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-div\">\r\n                            <div className=\"close-btn\" onClick={handleCloseClick}>\r\n                                <Close fontSize=\"small\" />\r\n                            </div>\r\n\r\n                            <div className=\"form-sec\">\r\n                                <div className=\"title-div\">\r\n                                    <span>Get a Free Demo.</span> <br />\r\n                                    <span>It's Completely </span><span style={{ color: '#3584A7' }}>Free!</span>\r\n                                </div>\r\n\r\n                                <form onSubmit={handleSubmit} className=\"inputform\" >\r\n\r\n                                    {/* Name */}\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-label\">\r\n                                            Name <span className=\"star\" >*</span>\r\n                                        </div>\r\n                                        <div className=\"input-box\">\r\n                                            <input type=\"text\" value={Name} onChange={(e) => { handleName(e.target.value) }} placeholder=\"Enter your name here\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Address */}\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-label\">\r\n                                            Address <span className=\"star\" >*</span>\r\n                                        </div>\r\n                                        <div className=\"input-box\">\r\n                                            <input type=\"text\" value={Address} onChange={(e) => { handleAddress(e.target.value) }} placeholder=\"Enter your Address here\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Phone Number */}\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-label\">\r\n                                            Phone Number <span className=\"star\" >*</span>\r\n                                        </div>\r\n                                        <div className=\"input-box\">\r\n                                            <PhoneInput\r\n                                                inputStyle={{ padding: '5px 10px 5px 55px', width: '100%', fontSize: '14px' }}\r\n                                                inputClass=\"ph-input\"\r\n                                                enableSearch={true}\r\n                                                country={'in'}\r\n                                                required={true}\r\n                                                countryCodeEditable={true}\r\n                                                value={Phone}\r\n                                                onChange={(e) => { handlePhone(e) }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    {/* Demo times */}\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-label\">\r\n                                            Select Demo Time <span className=\"star\" >*</span>\r\n                                        </div>\r\n                                        <div className=\"demo-time-div\">\r\n                                            {DemoTimeList.map((dd, i) => {\r\n                                                return (\r\n                                                    <div key={i} className={Time === dd ? \"demo-time-box-active\" : \"demo-time-box\"} onClick={() => { handleTime(dd) }} >\r\n                                                        {dd}\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    {/* Where did you hear */}\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-label\">\r\n                                            Where did you hear about us?\r\n                                        </div>\r\n                                        <div className=\"input-box\">\r\n                                            <select defaultValue={\"\"} onChange={(e) => { handleAbout(e.target.value) }} >\r\n                                                <option disabled value={\"\"}>Select</option>\r\n                                                <option value=\"Google\">Google</option>\r\n                                                <option value=\"Facebook\">Facebook</option>\r\n                                                <option value=\"Friends & Families\">Friends & Families</option>\r\n                                                <option value=\"_Other_Text\">Other</option>\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                        {\r\n                                            AboutOtherVisable ?\r\n                                                <div className=\"input-box\">\r\n                                                    <input type=\"text\" value={About} onChange={(e) => { handleAboutOtherText(e.target.value) }} placeholder=\"Other\" />\r\n                                                </div>\r\n                                                : \"\"\r\n                                        }\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"input-group \">\r\n                                        <center>\r\n                                            <button type=\"submit\" disabled={Loading} className=\"submit-btn\"  >{!Loading ? \"Continue\" : \"Please wait...\"}</button>\r\n                                        </center>\r\n                                    </div>\r\n\r\n                                    <div className=\"tc\">\r\n                                        By registering here, I agree to PolyMatic’s <span className=\"tc-link\"> Terms & Conditions </span> and <span className=\"tc-link\" > Privacy Policy </span>\r\n                                    </div>\r\n\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n        </React.Fragment >\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Home\r\n","\nimport React from 'react';\nimport './App.css'\nimport Home from './Components/Home/Home';\n\nexport default function App() {\n  return (\n    <div className=\"center\">\n        <Home />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}